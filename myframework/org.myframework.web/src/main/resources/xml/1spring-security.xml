<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/context 
		   http://www.springframework.org/schema/context/spring-context-3.0.xsd ">
	<!-- <context:component-scan base-package="org.myframework.web.security" /> -->
	<!-- 不需要进行安全认证的资源 -->
    <http pattern="/res/**" security="none" />
    <http pattern="/login.jsp" security="none"/>
    
    <!-- 资源所需要的权限 -->
    <http auto-config='true'>
        <form-login login-page="/login.jsp" 
            default-target-url="/index.html"
            authentication-failure-url="/login.jsp?error=true" />
        <logout logout-success-url="/index.html"/>
        
        <!-- 尝试访问没有权限的页面时跳转的页面 -->
        <access-denied-handler error-page="/error-noauth.jsp"/>
        
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
    </http>
    
    <!-- 自定义一个filter,必须包含authenticationManager,accessDecisionManager,
    securityMetadataSource三个属性 所有的功能都在这三个类中实现-->
    <beans:bean id="myFilter" class="org.myframework.web.security.MyFilterSecurotyInterceptor">
        <beans:property name="authenticationManager"  ref="authenticationManager" />
        <beans:property name="accessDecisionManager"  ref ="myAccessDecisionManagerBean"/>
        <beans:property name="securityMetadataSource" ref="securityMetadaSource"/>
    </beans:bean>
    
    <!-- 认证管理器，实现用户认证的入口，主要实现userdetailsservice -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="myUserDetailService"/>
    </authentication-manager>
    
    <beans:bean id="myUserDetailService"
        class="org.myframework.web.security.DefaultUserDetailsService">
    </beans:bean>
    
    <!-- 访问决策，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <beans:bean id="myAccessDecisionManagerBean"
        class="org.myframework.web.security.MyAccessDecisionManager" />
    <!-- 获取访问url对应的所有权限 -->  
    <beans:bean id="securityMetadaSource" 
        class="org.myframework.web.security.MyInvocationSecurityMetadaSource"/>

</beans:beans>